import com.mycelium.wapi.wallet.coins.Balance;
import com.mycelium.wapi.wallet.coins.CryptoCurrency;
import java.math.BigInteger;
import java.util.UUID;
import kotlin.collections.List;


CREATE TABLE IF NOT EXISTS BTCVContext(
    uuid TEXT AS UUID PRIMARY KEY NOT NULL,
    accountIndex INTEGER AS Int NOT NULL,
    indexContexts TEXT,
    lastDiscovery INTEGER,
    accountType INTEGER,
    accountSubId INTEGER,
    addressType TEXT,
    FOREIGN KEY (uuid)
        REFERENCES AccountContext (uuid)
        ON DELETE CASCADE
);

selectAllBTCVContexts:
SELECT ec.uuid, c.currency, c.accountName, c.archived, c.balance, c.blockHeight, ec.accountIndex
FROM BTCVContext AS ec
  INNER JOIN AccountContext AS c
  ON ec.uuid = c.uuid;

selectBTCVContextByUUID:
SELECT ec.uuid, c.currency, c.accountName, c.archived, c.balance, c.blockHeight, ec.accountIndex
FROM BTCVContext AS ec
    INNER JOIN AccountContext AS c
    ON ec.uuid = c.uuid
        WHERE ec.uuid = (?);

insert:
INSERT INTO BTCVContext(uuid, accountIndex)
VALUES (?, ?);

insertFullObject:
INSERT INTO BTCVContext(uuid, accountIndex)
VALUES ?;

delete:
DELETE FROM BTCVContext
WHERE uuid = (?);